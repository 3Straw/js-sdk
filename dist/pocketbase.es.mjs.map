{"version":3,"file":"pocketbase.es.mjs","sources":["../node_modules/tslib/tslib.es6.js","../src/ClientResponseError.ts","../src/stores/utils/JWT.ts","../src/models/utils/BaseModel.ts","../src/models/Record.ts","../src/models/User.ts","../src/models/Admin.ts","../src/stores/LocalAuthStore.ts","../src/services/utils/BaseService.ts","../src/services/Settings.ts","../src/models/utils/ListResult.ts","../src/services/utils/BaseCrudService.ts","../src/services/utils/CrudService.ts","../src/services/Admins.ts","../src/services/Users.ts","../src/models/utils/SchemaField.ts","../src/models/Collection.ts","../src/services/Collections.ts","../src/services/Records.ts","../src/services/utils/SubCrudService.ts","../src/models/LogRequest.ts","../src/services/Logs.ts","../src/services/Realtime.ts","../src/Client.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * ClientResponseError is a custom Error class that is intended to wrap\n * and normalize any error thrown by `Client.send()`.\n */\nexport default class ClientResponseError extends Error {\n    url: string                = '';\n    status: number             = 0;\n    data: {[key: string]: any} = {};\n    isAbort:  boolean          = false;\n    originalError: any         = null;\n\n    constructor(errData?: any) {\n        super(\"ClientResponseError\");\n\n        if (errData instanceof Error) {\n            this.originalError = errData instanceof Error ? errData : null;\n        }\n\n        if (errData !== null && typeof errData === 'object') {\n            this.url    = typeof errData.url === 'string' ? errData.url : '';\n            this.status = typeof errData.status === 'number' ? errData.status : 0;\n            this.data   = errData.data !== null && typeof errData.data === 'object' ? errData.data : {};\n        }\n\n        if (typeof DOMException !== 'undefined' && errData instanceof DOMException) {\n            this.isAbort = true;\n        }\n\n        this.name = \"ClientResponseError \" + this.status;\n        this.message = this.data?.message || 'Something went wrong while processing your request.'\n    }\n}\n","let atobPolyfill: Function;\nif (typeof atob === 'function') {\n    atobPolyfill = atob\n} else {\n    atobPolyfill = (a: any) => Buffer.from(a, 'base64').toString('binary');\n}\n\nexport default class JWT {\n    /**\n     * Returns JWT token's payload data.\n     */\n    static getPayload(token: string): { [key: string]: any } {\n        if (token) {\n            try {\n\n                let base64 = decodeURIComponent(atobPolyfill(token.split('.')[1]).split('').map(function (c: string) {\n                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n                }).join(''));\n\n                return JSON.parse(base64) || {};\n            } catch (e) {\n            }\n        }\n\n        return {};\n    }\n\n    /**\n     * Checks whether a JWT token is expired or not.\n     * Tokens without `exp` payload key are considered valid.\n     * Tokens with empty payload (eg. invalid token strings) are considered expired.\n     *\n     * @param token The token to check.\n     * @param [expirationThreshold] Time in seconds that will be substracted from the token `exp` property.\n     */\n    static isExpired(token: string, expirationThreshold = 0): boolean {\n        let payload = JWT.getPayload(token);\n\n        if (\n            Object.keys(payload).length > 0 &&\n            (!payload.exp || (payload.exp - expirationThreshold) > (Date.now() / 1000))\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n}\n","export default abstract class BaseModel {\n    id!:      string;\n    created!: string;\n    updated!: string;\n\n    constructor(data: { [key: string]: any } = {}) {\n        this.load(data || {});\n    }\n\n    /**\n     * Loads `data` into the current model.\n     */\n    load(data: { [key: string]: any }) {\n        this.id = typeof data.id !== 'undefined' ? data.id : '';\n        this.created = typeof data.created !== 'undefined' ? data.created : '';\n        this.updated = typeof data.updated !== 'undefined' ? data.updated : '';\n    }\n\n    /**\n     * Returns whether the current loaded data represent a stored db record.\n     */\n    get isNew(): boolean {\n        return (\n            // id is not set\n            !this.id ||\n            // zero uuid value\n            this.id === '00000000-0000-0000-0000-000000000000'\n        );\n    }\n\n    /**\n     * Robust deep clone of a model.\n     */\n    clone(): BaseModel {\n        return new (this.constructor as any)(JSON.parse(JSON.stringify(this)));\n    }\n\n    /**\n     * Exports all model properties as a new plain object.\n     */\n    export(): { [key: string]: any } {\n        return Object.assign({}, this);\n    }\n}\n","import BaseModel from '@/models/utils/BaseModel';\n\nexport default class Record extends BaseModel {\n    [key: string]: any,\n\n    '@collectionId'!:   string;\n    '@collectionName'!: string;\n    '@expand'!:         {[key: string]: any};\n\n    /**\n     * @inheritdoc\n     */\n    load(data: { [key: string]: any }) {\n        super.load(data);\n\n        for (const [key, value] of Object.entries(data)) {\n            this[key] = value;\n        }\n\n        // normalize common fields\n        this['@collectionId']   = typeof data['@collectionId']   !== 'undefined' ? data['@collectionId']   : '';\n        this['@collectionName'] = typeof data['@collectionName'] !== 'undefined' ? data['@collectionName'] : '';\n        this['@expand']         = typeof data['@expand']         !== 'undefined' ? data['@expand']         : {};\n    }\n}\n","import BaseModel from '@/models/utils/BaseModel';\nimport Record    from '@/models/Record';\n\nexport default class User extends BaseModel {\n    email!:                  string;\n    verified!:               boolean;\n    lastResetSentAt!:        string;\n    lastVerificationSentAt!: string;\n    profile!:                null|Record;\n\n    /**\n     * @inheritdoc\n     */\n    load(data: { [key: string]: any }) {\n        super.load(data);\n\n        this.email = typeof data.email === 'string' ? data.email : '';\n        this.verified = !!data.verified;\n        this.lastResetSentAt = typeof data.lastResetSentAt === 'string' ? data.lastResetSentAt : '';\n        this.lastVerificationSentAt = typeof data.lastVerificationSentAt === 'string' ? data.lastVerificationSentAt : '';\n        this.profile = data.profile ? new Record(data.profile) : null;\n    }\n}\n","import BaseModel from '@/models/utils/BaseModel';\n\nexport default class Admin extends BaseModel {\n    avatar!:          number;\n    email!:           string;\n    lastResetSentAt!: string;\n\n    /**\n     * @inheritdoc\n     */\n    load(data: { [key: string]: any }) {\n        super.load(data);\n\n        this.avatar = typeof data.avatar === 'number' ? data.avatar : 0;\n        this.email  = typeof data.email  === 'string' ? data.email  : '';\n        this.lastResetSentAt = typeof data.lastResetSentAt === 'string' ? data.lastResetSentAt : '';\n    }\n}\n","import { AuthStore } from '@/stores/utils/AuthStore';\nimport JWT           from '@/stores/utils/JWT';\nimport User          from '@/models/User';\nimport Admin         from '@/models/Admin';\n\n/**\n * Default token store for browsers with auto fallback\n * to runtime/memory if local storage is undefined (eg. node env).\n */\nexport default class LocalAuthStore implements AuthStore {\n    private fallback: { [key: string]: any } = {};\n    private storageKey: string\n\n    constructor(storageKey = \"pocketbase_auth\") {\n        this.storageKey = storageKey;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    get token(): string {\n        const data = this._storageGet(this.storageKey) || {};\n\n        return data.token || '';\n    }\n\n    /**\n     * @inheritdoc\n     */\n    get model(): User | Admin | {} {\n        const data = this._storageGet(this.storageKey) || {};\n\n        if (\n            data === null ||\n            typeof data !== 'object' ||\n            data.model === null ||\n            typeof data.model !== 'object'\n        ) {\n            return {};\n        }\n\n        // admins don't have `verified` prop\n        if (typeof data.model?.verified !== 'undefined') {\n            return new User(data.model);\n        }\n\n        return new Admin(data.model);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    get isValid(): boolean {\n        return !JWT.isExpired(this.token);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    save(token: string, model: User | Admin | {}) {\n        this._storageSet(this.storageKey, {\n            'token': token,\n            'model': model,\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    clear() {\n        return this._storageRemove(this.storageKey);\n    }\n\n    // ---------------------------------------------------------------\n    // Internal helpers:\n    // ---------------------------------------------------------------\n\n    /**\n     * Retrieves `key` from the browser's local storage\n     * (or runtime/memory if local storage is undefined).\n     */\n    private _storageGet(key: string): any {\n        if (typeof window !== 'undefined' && window?.localStorage) {\n            const rawValue = window?.localStorage?.getItem(key) || '';\n            try {\n                return JSON.parse(rawValue);\n            } catch (e) { // not a json\n                return rawValue;\n            }\n        }\n\n        // fallback to runtime/memory\n        return this.fallback[key];\n    }\n\n    /**\n     * Stores a new data in the browser's local storage\n     * (or runtime/memory if local storage is undefined).\n     */\n    private _storageSet(key: string, value: any) {\n        if (typeof window !== 'undefined' && window?.localStorage) {\n            // store in local storage\n            let normalizedVal = value;\n            if (typeof value !== 'string') {\n                normalizedVal = JSON.stringify(value);\n            }\n            window?.localStorage?.setItem(key, normalizedVal);\n        } else {\n            // store in runtime/memory\n            this.fallback[key] = value;\n        }\n    }\n\n    /**\n     * Removes `key` from the browser's local storage and the runtime/memory.\n     */\n    private _storageRemove(key: string) {\n        // delete from local storage\n        if (typeof window !== 'undefined') {\n            window?.localStorage?.removeItem(key);\n        }\n\n        // delete from runtime/memory\n        delete this.fallback[key];\n    }\n}\n","import Client from '@/Client';\n\n/**\n * BaseService class that should be inherited from all API services.\n */\nexport default abstract class BaseService {\n    readonly client: Client\n\n    constructor(client: Client) {\n        this.client = client;\n    }\n}\n","import BaseService from '@/services/utils/BaseService';\n\nexport default class Settings extends BaseService {\n    /**\n     * Fetch all available app settings.\n     */\n    getAll(queryParams = {}): Promise<{ [key: string]: any }> {\n        return this.client.send('/api/settings', {\n            'method': 'GET',\n            'params': queryParams,\n        }).then((responseData) => responseData || {});\n    }\n\n    /**\n     * Bulk updates app settings.\n     */\n    update(bodyParams = {}, queryParams = {}): Promise<{ [key: string]: any }> {\n        return this.client.send('/api/settings', {\n            'method': 'PATCH',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then((responseData) => responseData || {});\n    }\n}\n","import BaseModel from './BaseModel';\n\nexport default class ListResult<M extends BaseModel> {\n    page!: number;\n    perPage!: number;\n    totalItems!: number;\n    items!: Array<M>;\n\n    constructor(\n        page: number,\n        perPage: number,\n        totalItems: number,\n        items: Array<M>,\n    ) {\n        this.page = page > 0 ? page : 1;\n        this.perPage = perPage >= 0 ? perPage : 0;\n        this.totalItems = totalItems >= 0 ? totalItems : 0;\n        this.items = items || [];\n    }\n}\n","import BaseModel   from '@/models/utils/BaseModel';\nimport ListResult  from '@/models/utils/ListResult';\nimport BaseService from '@/services/utils/BaseService';\n\nexport default abstract class BaseCrudService<M extends BaseModel> extends BaseService {\n    /**\n     * Response data decoder.\n     */\n    abstract decode(data: { [key: string]: any }): M\n\n    /**\n     * Returns a promise with all list items batch fetched at once.\n     */\n    protected _getFullList(basePath: string, batchSize = 100, queryParams = {}): Promise<Array<M>> {\n        var result: Array<M> = [];\n\n        let request = async (page: number): Promise<Array<any>> => {\n            return this._getList(basePath, page, batchSize, queryParams).then((list) => {\n                const castedList = (list as ListResult<M>);\n                const items = castedList.items;\n                const totalItems = castedList.totalItems;\n\n                result = result.concat(items);\n\n                if (items.length && totalItems > result.length) {\n                    return request(page + 1);\n                }\n\n                return result;\n            });\n        }\n\n        return request(1);\n    }\n\n    /**\n     * Returns paginated items list.\n     */\n    protected _getList(basePath: string, page = 1, perPage = 30, queryParams = {}): Promise<ListResult<M>> {\n        queryParams = Object.assign({\n            'page':    page,\n            'perPage': perPage,\n        }, queryParams);\n\n        return this.client.send(basePath, {\n            'method': 'GET',\n            'params': queryParams,\n        }).then((responseData: any) => {\n            const items: Array<M> = [];\n            if (responseData?.items) {\n                responseData.items = responseData.items || [];\n                for (const item of responseData.items) {\n                    items.push(this.decode(item));\n                }\n            }\n\n            return new ListResult<M>(\n                responseData?.page || 1,\n                responseData?.perPage || 0,\n                responseData?.totalItems || 0,\n                items,\n            );\n        });\n    }\n\n    /**\n     * Returns single item by its id.\n     */\n    protected _getOne(basePath: string, id: string, queryParams = {}): Promise<M> {\n        return this.client.send(basePath + '/' + encodeURIComponent(id), {\n            'method': 'GET',\n            'params': queryParams\n        }).then((responseData: any) => this.decode(responseData));\n    }\n\n    /**\n     * Creates a new item.\n     */\n    protected _create(basePath: string, bodyParams = {}, queryParams = {}): Promise<M> {\n        return this.client.send(basePath, {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then((responseData: any) => this.decode(responseData));\n    }\n\n    /**\n     * Updates an existing item by its id.\n     */\n    protected _update(basePath: string, id: string, bodyParams = {}, queryParams = {}): Promise<M> {\n        return this.client.send(basePath + '/' + encodeURIComponent(id), {\n            'method': 'PATCH',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then((responseData: any) => this.decode(responseData));\n    }\n\n    /**\n     * Deletes an existing item by its id.\n     */\n    protected _delete(basePath: string, id: string, bodyParams = {}, queryParams = {}): Promise<boolean> {\n        return this.client.send(basePath + '/' + encodeURIComponent(id), {\n            'method': 'DELETE',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(() => true);\n    }\n}\n","import ListResult      from '@/models/utils/ListResult';\nimport BaseModel       from '@/models/utils/BaseModel';\nimport BaseCrudService from '@/services/utils/BaseCrudService';\n\nexport default abstract class CrudService<M extends BaseModel> extends BaseCrudService<M> {\n    /**\n     * Base path for the crud actions (without trailing slash, eg. '/admins').\n     */\n    abstract baseCrudPath(): string\n\n    /**\n     * Returns a promise with all list items batch fetched at once.\n     */\n    getFullList(batchSize = 100, queryParams = {}): Promise<Array<M>> {\n        return this._getFullList(this.baseCrudPath(), batchSize, queryParams);\n    }\n\n    /**\n     * Returns paginated items list.\n     */\n    getList(page = 1, perPage = 30, queryParams = {}): Promise<ListResult<M>> {\n        return this._getList(this.baseCrudPath(), page, perPage, queryParams);\n    }\n\n    /**\n     * Returns single item by its id.\n     */\n    getOne(id: string, queryParams = {}): Promise<M> {\n        return this._getOne(this.baseCrudPath(), id, queryParams);\n    }\n\n    /**\n     * Creates a new item.\n     */\n    create(bodyParams = {}, queryParams = {}): Promise<M> {\n        return this._create(this.baseCrudPath(), bodyParams, queryParams);\n    }\n\n    /**\n     * Updates an existing item by its id.\n     */\n    update(id: string, bodyParams = {}, queryParams = {}): Promise<M> {\n        return this._update(this.baseCrudPath(), id, bodyParams, queryParams);\n    }\n\n    /**\n     * Deletes an existing item by its id.\n     */\n    delete(id: string, bodyParams = {}, queryParams = {}): Promise<boolean> {\n        return this._delete(this.baseCrudPath(), id, bodyParams, queryParams);\n    }\n}\n","import CrudService from '@/services/utils/CrudService';\nimport Admin       from '@/models/Admin';\n\nexport type AdminAuthResponse = {\n    [key: string]: any,\n    token: string,\n    admin: Admin,\n}\n\nexport default class Admins extends CrudService<Admin> {\n    /**\n     * @inheritdoc\n     */\n    decode(data: { [key: string]: any }): Admin {\n        return new Admin(data);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    baseCrudPath(): string {\n        return '/api/admins';\n    }\n\n    /**\n     * Prepare successfull authorize response.\n     */\n    protected authResponse(responseData: any): AdminAuthResponse {\n        const admin = this.decode(responseData?.admin || {});\n\n        if (responseData?.token && responseData?.admin) {\n            this.client.AuthStore.save(responseData.token, admin);\n        }\n\n        return Object.assign({}, responseData, {\n            // normalize common fields\n            'token': responseData?.token || '',\n            'admin': admin,\n        });\n    }\n\n    /**\n     * Authenticate an admin account by its email and password\n     * and returns a new admin token and data.\n     *\n     * On success this method automatically updates the client's AuthStore data.\n     */\n    authViaEmail(\n        email: string,\n        password: string,\n        bodyParams = {},\n        queryParams = {},\n    ): Promise<AdminAuthResponse> {\n        bodyParams = Object.assign({\n            'email':    email,\n            'password': password,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/auth-via-email', {\n            'method':  'POST',\n            'params':  queryParams,\n            'body':    bodyParams,\n            'headers': {\n                'Authorization': '',\n            },\n        }).then(this.authResponse.bind(this));\n    }\n\n    /**\n     * Refreshes the current admin authenticated instance and\n     * returns a new token and admin data.\n     *\n     * On success this method automatically updates the client's AuthStore data.\n     */\n    refresh(bodyParams = {}, queryParams = {}): Promise<AdminAuthResponse> {\n        return this.client.send(this.baseCrudPath() + '/refresh', {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(this.authResponse.bind(this));\n    }\n\n    /**\n     * Sends admin password reset request.\n     */\n    requestPasswordReset(\n        email: string,\n        bodyParams = {},\n        queryParams = {},\n    ): Promise<boolean> {\n        bodyParams = Object.assign({\n            'email': email,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/request-password-reset', {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(() => true);\n    }\n\n    /**\n     * Confirms admin password reset request.\n     */\n    confirmPasswordReset(\n        passwordResetToken: string,\n        password: string,\n        passwordConfirm: string,\n        bodyParams = {},\n        queryParams = {},\n    ): Promise<AdminAuthResponse> {\n        bodyParams = Object.assign({\n            'token':           passwordResetToken,\n            'password':        password,\n            'passwordConfirm': passwordConfirm,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/confirm-password-reset', {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(this.authResponse.bind(this));\n    }\n}\n","import CrudService from '@/services/utils/CrudService';\nimport User        from '@/models/User';\n\nexport type UserAuthResponse = {\n    [key: string]: any,\n    token:         string,\n    user:          User,\n}\n\nexport type AuthProviderInfo = {\n    name:                string,\n    state:               string,\n    codeVerifier:        string,\n    codeChallenge:       string,\n    codeChallengeMethod: string,\n    authUrl:             string,\n}\n\nexport type AuthMethodsList = {\n    [key: string]: any,\n    emailPassword: boolean,\n    authProviders: Array<AuthProviderInfo>,\n}\n\nexport default class Users extends CrudService<User> {\n    /**\n     * @inheritdoc\n     */\n    decode(data: { [key: string]: any }): User {\n        return new User(data);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    baseCrudPath(): string {\n        return '/api/users';\n    }\n\n    /**\n     * Prepare successfull authorization response.\n     */\n    protected authResponse(responseData: any): UserAuthResponse {\n        const user = this.decode(responseData?.user || {});\n\n        if (responseData?.token && responseData?.user) {\n            this.client.AuthStore.save(responseData.token, user);\n        }\n\n        return Object.assign({}, responseData, {\n            // normalize common fields\n            'token': responseData?.token || '',\n            'user':  user,\n        });\n    }\n\n    /**\n     * Returns all available application auth methods.\n     */\n    listAuthMethods(queryParams = {}): Promise<AuthMethodsList> {\n        return this.client.send(this.baseCrudPath() + '/auth-methods', {\n            'method': 'GET',\n            'params': queryParams,\n        }).then((responseData: any) => {\n            return Object.assign({}, responseData, {\n                // normalize common fields\n                'emailPassword':  !!responseData?.emailPassword,\n                'authProviders': Array.isArray(responseData?.authProviders) ? responseData?.authProviders : [],\n            });\n        });\n    }\n\n    /**\n     * Authenticate a user via its email and password.\n     *\n     * On success, this method also automatically updates\n     * the client's AuthStore data and returns:\n     * - new user authentication token\n     * - the authenticated user model record\n     */\n    authViaEmail(\n        email: string,\n        password: string,\n        bodyParams = {},\n        queryParams = {},\n    ): Promise<UserAuthResponse> {\n        bodyParams = Object.assign({\n            'email':    email,\n            'password': password,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/auth-via-email', {\n            'method':  'POST',\n            'params':  queryParams,\n            'body':    bodyParams,\n            'headers': {\n                'Authorization': '',\n            },\n        }).then(this.authResponse.bind(this));\n    }\n\n    /**\n     * Authenticate a user via OAuth2 client provider.\n     *\n     * On success, this method also automatically updates\n     * the client's AuthStore data and returns:\n     * - new user authentication token\n     * - the authenticated user model record\n     * - the OAuth2 user profile data (eg. name, email, avatar, etc.)\n     */\n    authViaOAuth2(\n        provider: string,\n        code: string,\n        codeVerifier: string,\n        redirectUrl: string,\n        bodyParams = {},\n        queryParams = {},\n    ): Promise<UserAuthResponse> {\n        bodyParams = Object.assign({\n            'provider':     provider,\n            'code':         code,\n            'codeVerifier': codeVerifier,\n            'redirectUrl':  redirectUrl,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/auth-via-oauth2', {\n            'method':  'POST',\n            'params':  queryParams,\n            'body':    bodyParams,\n            'headers': {\n                'Authorization': '',\n            },\n        }).then(this.authResponse.bind(this));\n    }\n\n    /**\n     * Refreshes the current user authenticated instance and\n     * returns a new token and user data.\n     *\n     * On success this method also automatically updates the client's AuthStore data.\n     */\n    refresh(bodyParams = {}, queryParams = {}): Promise<UserAuthResponse> {\n        return this.client.send(this.baseCrudPath() + '/refresh', {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(this.authResponse.bind(this));\n    }\n\n    /**\n     * Sends user password reset request.\n     */\n    requestPasswordReset(\n        email: string,\n        bodyParams  = {},\n        queryParams = {},\n    ): Promise<boolean> {\n        bodyParams = Object.assign({\n            'email': email,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/request-password-reset', {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(() => true);\n    }\n\n    /**\n     * Confirms user password reset request.\n     */\n    confirmPasswordReset(\n        passwordResetToken: string,\n        password: string,\n        passwordConfirm: string,\n        bodyParams = {},\n        queryParams = {},\n    ): Promise<UserAuthResponse> {\n        bodyParams = Object.assign({\n            'token':           passwordResetToken,\n            'password':        password,\n            'passwordConfirm': passwordConfirm,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/confirm-password-reset', {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(this.authResponse.bind(this));\n    }\n\n    /**\n     * Sends user verification email request.\n     */\n    requestVerification(\n        email: string,\n        bodyParams = {},\n        queryParams = {},\n    ): Promise<boolean> {\n        bodyParams = Object.assign({\n            'email': email,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/request-verification', {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(() => true);\n    }\n\n    /**\n     * Confirms user email verification request.\n     */\n    confirmVerification(\n        verificationToken: string,\n        bodyParams  = {},\n        queryParams = {},\n    ): Promise<UserAuthResponse> {\n        bodyParams = Object.assign({\n            'token': verificationToken,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/confirm-verification', {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(this.authResponse.bind(this));\n    }\n\n    /**\n     * Sends an email change request to the authenticated user.\n     */\n    requestEmailChange(\n        newEmail: string,\n        bodyParams = {},\n        queryParams = {},\n    ): Promise<boolean> {\n        bodyParams = Object.assign({\n            'newEmail': newEmail,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/request-email-change', {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(() => true);\n    }\n\n    /**\n     * Confirms user new email address.\n     */\n    confirmEmailChange(\n        emailChangeToken: string,\n        password: string,\n        bodyParams  = {},\n        queryParams = {},\n    ): Promise<UserAuthResponse> {\n        bodyParams = Object.assign({\n            'token': emailChangeToken,\n            'password': password,\n        }, bodyParams);\n\n        return this.client.send(this.baseCrudPath() + '/confirm-email-change', {\n            'method': 'POST',\n            'params': queryParams,\n            'body':   bodyParams,\n        }).then(this.authResponse.bind(this));\n    }\n}\n","export default class SchemaField {\n    id!:       string;\n    name!:     string;\n    type!:     string;\n    system!:   boolean;\n    required!: boolean;\n    unique!:   boolean;\n    options!:  { [key: string]: any };\n\n    constructor(data: { [key: string]: any } = {}) {\n        this.load(data || {});\n    }\n\n    /**\n     * Loads `data` into the field.\n     */\n    load(data: { [key: string]: any }) {\n        this.id       = typeof data.id !== 'undefined' ? data.id : '';\n        this.name     = typeof data.name !== 'undefined' ? data.name : '';\n        this.type     = typeof data.type !== 'undefined' ? data.type : 'text';\n        this.system   = !!data.system;\n        this.required = !!data.required;\n        this.unique   = !!data.unique;\n        this.options  = typeof data.options === 'object' && data.options !== null ? data.options : {};\n    }\n}\n","import BaseModel   from '@/models/utils/BaseModel';\nimport SchemaField from '@/models/utils/SchemaField';\n\nexport default class Collection extends BaseModel {\n    name!:       string;\n    schema!:     Array<SchemaField>;\n    system!:     boolean;\n    listRule!:   null|string;\n    viewRule!:   null|string;\n    createRule!: null|string;\n    updateRule!: null|string;\n    deleteRule!: null|string;\n\n    /**\n     * @inheritdoc\n     */\n    load(data: { [key: string]: any }) {\n        super.load(data);\n\n        this.name   = typeof data.name === 'string' ? data.name : '';\n        this.system = !!data.system;\n\n        // rules\n        this.listRule   = typeof data.listRule   === 'string' ? data.listRule   : null;\n        this.viewRule   = typeof data.viewRule   === 'string' ? data.viewRule   : null;\n        this.createRule = typeof data.createRule === 'string' ? data.createRule : null;\n        this.updateRule = typeof data.updateRule === 'string' ? data.updateRule : null;\n        this.deleteRule = typeof data.deleteRule === 'string' ? data.deleteRule : null;\n\n        // schema\n        data.schema = Array.isArray(data.schema) ? data.schema : [];\n        this.schema = [];\n        for (let field of data.schema) {\n            this.schema.push(new SchemaField(field));\n        }\n    }\n}\n","import CrudService from '@/services/utils/CrudService';\nimport Collection  from '@/models/Collection';\n\nexport default class Collections extends CrudService<Collection> {\n    /**\n     * @inheritdoc\n     */\n    decode(data: { [key: string]: any }): Collection {\n        return new Collection(data);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    baseCrudPath(): string {\n        return '/api/collections';\n    }\n}\n","import SubCrudService from '@/services/utils/SubCrudService';\nimport Record         from '@/models/Record';\n\nexport default class Records extends SubCrudService<Record> {\n    /**\n     * @inheritdoc\n     */\n    decode(data: { [key: string]: any }): Record {\n        return new Record(data);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    baseCrudPath(collectionIdOrName: string): string {\n        return '/api/collections/' + encodeURIComponent(collectionIdOrName) + '/records';\n    }\n\n    /**\n     * Builds and returns an absolute record file url.\n     */\n    getFileUrl(record: Record, filename: string, queryParams = {}): string {\n        const parts = [];\n        parts.push(this.client.baseUrl.replace(/\\/+$/gm, \"\"))\n        parts.push(\"api\")\n        parts.push(\"files\")\n        parts.push(record[\"@collectionId\"])\n        parts.push(record.id)\n        parts.push(filename)\n        let result = parts.join('/');\n\n        if (Object.keys(queryParams).length) {\n            const params = new URLSearchParams(queryParams);\n            result += (result.includes(\"?\") ? \"&\" : \"?\") + params;\n        }\n\n        return result\n    }\n}\n","import BaseModel       from '@/models/utils/BaseModel';\nimport ListResult      from '@/models/utils/ListResult';\nimport BaseCrudService from '@/services/utils/BaseCrudService';\n\nexport default abstract class SubCrudService<M extends BaseModel> extends BaseCrudService<M> {\n    /**\n     * Base path for the crud actions (without trailing slash, eg. '/collections/{:sub}/records').\n     */\n    abstract baseCrudPath(sub: string): string\n\n    /**\n     * Returns a promise with all list items batch fetched at once.\n     */\n    getFullList(sub: string, batchSize = 100, queryParams = {}): Promise<Array<M>> {\n        return this._getFullList(this.baseCrudPath(sub), batchSize, queryParams);\n    }\n\n    /**\n     * Returns paginated items list.\n     */\n    getList(sub: string, page = 1, perPage = 30, queryParams = {}): Promise<ListResult<M>> {\n        return this._getList(this.baseCrudPath(sub), page, perPage, queryParams);\n    }\n\n    /**\n     * Returns single item by its id.\n     */\n    getOne(sub: string, id: string, queryParams = {}): Promise<M> {\n        return this._getOne(this.baseCrudPath(sub), id, queryParams);\n    }\n\n    /**\n     * Creates a new item.\n     */\n    create(sub: string, bodyParams = {}, queryParams = {}): Promise<M> {\n        return this._create(this.baseCrudPath(sub), bodyParams, queryParams);\n    }\n\n    /**\n     * Updates an existing item by its id.\n     */\n    update(sub: string, id: string, bodyParams = {}, queryParams = {}): Promise<M> {\n        return this._update(this.baseCrudPath(sub), id, bodyParams, queryParams);\n    }\n\n    /**\n     * Deletes an existing item by its id.\n     */\n    delete(sub: string, id: string, bodyParams = {}, queryParams = {}): Promise<boolean> {\n        return this._delete(this.baseCrudPath(sub), id, bodyParams, queryParams);\n    }\n}\n","import BaseModel from '@/models/utils/BaseModel';\n\nexport default class LogRequest extends BaseModel {\n    url!:       string;\n    method!:    string;\n    status!:    number;\n    auth!:      string;\n    ip!:        string;\n    referer!:   string;\n    userAgent!: string;\n    meta!:      null|{ [key: string]: any };\n\n    /**\n     * @inheritdoc\n     */\n    load(data: { [key: string]: any }) {\n        super.load(data);\n\n        this.url       = typeof data.url === 'string' ? data.url : '';\n        this.method    = typeof data.method === 'string' ? data.method : 'GET';\n        this.status    = typeof data.status === 'number' ? data.status : 200;\n        this.auth      = typeof data.auth === 'string' ? data.auth : 'guest';\n        this.ip        = typeof data.ip === 'string' ? data.ip : '';\n        this.referer   = typeof data.referer === 'string' ? data.referer : '';\n        this.userAgent = typeof data.userAgent === 'string' ? data.userAgent : '';\n        this.meta      = typeof data.meta === 'object' && data.meta !== null ? data.meta : {};\n    }\n}\n","import LogRequest  from '@/models/LogRequest';\nimport ListResult  from '@/models/utils/ListResult';\nimport BaseService from '@/services/utils/BaseService';\n\nexport type HourlyStats = {\n    total: number,\n    date:  string,\n}\n\nexport default class Logs extends BaseService {\n    /**\n     * Returns paginated logged requests list.\n     */\n    getRequestsList(page = 1, perPage = 30, queryParams = {}): Promise<ListResult<LogRequest>> {\n        queryParams = Object.assign({\n            'page':    page,\n            'perPage': perPage,\n        }, queryParams);\n\n        return this.client.send('/api/logs/requests', {\n            'method': 'GET',\n            'params': queryParams,\n        }).then((responseData: any) => {\n            const items: Array<LogRequest> = [];\n            if (responseData?.items) {\n                responseData.items = responseData?.items || [];\n                for (const item of responseData.items) {\n                    items.push(new LogRequest(item));\n                }\n            }\n\n            return new ListResult<LogRequest>(\n                responseData?.page || 1,\n                responseData?.perPage || 0,\n                responseData?.totalItems || 0,\n                items,\n            );\n        });\n    }\n\n    /**\n     * Returns a single logged request by its id.\n     */\n    getRequest(id: string, queryParams = {}): Promise<LogRequest> {\n        return this.client.send('/api/logs/requests/' + encodeURIComponent(id), {\n            'method': 'GET',\n            'params': queryParams\n        }).then((responseData: any) => new LogRequest(responseData));\n    }\n\n    /**\n     * Returns request logs statistics.\n     */\n    getRequestsStats(queryParams = {}): Promise<Array<HourlyStats>> {\n        return this.client.send('/api/logs/requests/stats', {\n            'method': 'GET',\n            'params': queryParams\n        }).then((responseData: any) => responseData);\n    }\n}\n","import BaseService from '@/services/utils/BaseService';\nimport Record      from '@/models/Record';\n\nexport interface MessageData {\n    [key: string]: any;\n    action: string;\n    record: Record;\n}\n\nexport interface SubscriptionFunc{\n    (data: MessageData):void;\n}\n\nexport default class Realtime extends BaseService {\n    private clientId: string = \"\";\n    private eventSource: EventSource | null = null;\n    private subscriptions: { [key: string]: EventListener } = {};\n\n    /**\n     * Inits the sse connection (if not already) and register the subscription.\n     */\n    async subscribe(subscription: string, callback: SubscriptionFunc): Promise<void> {\n        if (!subscription) {\n            throw new Error('subscription must be set.')\n        }\n\n        // unsubscribe existing\n        if (this.subscriptions[subscription]) {\n            this.eventSource?.removeEventListener(subscription, this.subscriptions[subscription]);\n        }\n\n        // register subscription\n        this.subscriptions[subscription] = function (e: Event) {\n            const msgEvent = (e as MessageEvent);\n\n            let data;\n            try {\n                data = JSON.parse(msgEvent?.data);\n            } catch {}\n\n            callback(data || {});\n        }\n\n        if (!this.eventSource) {\n            // start a new sse connection\n            this.connect();\n        } else if (this.clientId) {\n            // otherwise - just persist the updated subscriptions\n            await this.submitSubscriptions();\n        }\n    }\n\n    /**\n     * Unsubscribe from a subscription.\n     *\n     * If the `subscription` argument is not set,\n     * then the client will unsubscibe from all registered subscriptions.\n     *\n     * The related sse connection will be autoclosed if after the\n     * unsubscribe operations there are no active subscriptions left.\n     */\n    async unsubscribe(subscription?: string): Promise<void> {\n        if (!subscription) {\n            // remove all subscriptions\n            this.removeSubscriptionListeners();\n            this.subscriptions = {};\n        } else if (this.subscriptions[subscription]) {\n            // remove a single subscription\n            this.eventSource?.removeEventListener(subscription, this.subscriptions[subscription]);\n            delete this.subscriptions[subscription];\n        } else {\n            // not subscribed to the specified subscription\n            return\n        }\n\n        if (this.clientId) {\n            await this.submitSubscriptions();\n        }\n\n        // no more subscriptions -> close the sse connection\n        if (!Object.keys(this.subscriptions).length) {\n            this.disconnect();\n        }\n    }\n\n    private async submitSubscriptions(): Promise<boolean> {\n        // optimistic update\n        this.addSubscriptionListeners();\n\n        return this.client.send('/api/realtime', {\n            'method': 'POST',\n            'body': {\n                'clientId': this.clientId,\n                'subscriptions': Object.keys(this.subscriptions),\n            },\n        }).then(() => true);\n    }\n\n    private addSubscriptionListeners(): void {\n        if (!this.eventSource) {\n            return;\n        }\n\n        this.removeSubscriptionListeners();\n\n        for (let sub in this.subscriptions) {\n            this.eventSource.addEventListener(sub, this.subscriptions[sub]);\n        }\n    }\n\n    private removeSubscriptionListeners(): void {\n        if (!this.eventSource) {\n            return;\n        }\n\n        for (let sub in this.subscriptions) {\n            this.eventSource.removeEventListener(sub, this.subscriptions[sub]);\n        }\n    }\n\n    private connectHandler(e: Event): void {\n        const msgEvent = (e as MessageEvent);\n        this.clientId = msgEvent?.lastEventId;\n        this.submitSubscriptions();\n    }\n\n    private connect(): void {\n        this.disconnect();\n        this.eventSource = new EventSource(this.client.fullUrl('/api/realtime'))\n        this.eventSource.addEventListener('PB_CONNECT', (e) => this.connectHandler(e));\n    }\n\n    private disconnect(): void {\n        this.removeSubscriptionListeners();\n        this.eventSource?.removeEventListener('PB_CONNECT', (e) => this.connectHandler(e));\n        this.eventSource?.close();\n        this.eventSource = null;\n        this.clientId = \"\";\n    }\n}\n","import ClientResponseError from '@/ClientResponseError';\nimport { AuthStore }       from '@/stores/utils/AuthStore';\nimport LocalAuthStore      from '@/stores/LocalAuthStore';\nimport Settings            from '@/services/Settings';\nimport Admins              from '@/services/Admins';\nimport Users               from '@/services/Users';\nimport Collections         from '@/services/Collections';\nimport Records             from '@/services/Records';\nimport Logs                from '@/services/Logs';\nimport Realtime            from '@/services/Realtime';\n\n/**\n * PocketBase JS Client.\n */\nexport default class Client {\n    baseUrl:   string;\n    lang:      string;\n    AuthStore: AuthStore;\n\n    readonly Settings:    Settings;\n    readonly Admins:      Admins;\n    readonly Users:       Users;\n    readonly Collections: Collections;\n    readonly Records:     Records;\n    readonly Logs:        Logs;\n    readonly Realtime:    Realtime;\n\n    private cancelControllers: { [key: string]: AbortController } = {}\n\n    constructor(\n        baseUrl = '/',\n        lang = 'en-US',\n        authStore?: AuthStore | null,\n    ) {\n        this.baseUrl     = baseUrl;\n        this.lang        = lang;\n        this.AuthStore   = authStore || new LocalAuthStore();\n        this.Settings    = new Settings(this);\n        this.Admins      = new Admins(this);\n        this.Users       = new Users(this);\n        this.Collections = new Collections(this);\n        this.Records     = new Records(this);\n        this.Logs        = new Logs(this);\n        this.Realtime    = new Realtime(this);\n    }\n\n    /**\n     * Cancels single request by its cancellation key.\n     */\n    cancelRequest(cancelKey: string): Client {\n        if (this.cancelControllers[cancelKey]) {\n            this.cancelControllers[cancelKey].abort();\n            delete this.cancelControllers[cancelKey];\n        }\n\n        return this;\n    }\n\n    /**\n     * Cancels all pending requests.\n     */\n    cancelAllRequests(): Client {\n        for (let k in this.cancelControllers) {\n            this.cancelControllers[k].abort();\n        }\n\n        this.cancelControllers = {};\n\n        return this;\n    }\n\n    /**\n     * Sends an api http request.\n     */\n    send(path: string, reqConfig: { [key: string]: any }): Promise<any> {\n        const config = Object.assign({}, reqConfig);\n\n        if (!(config.body instanceof FormData)) {\n            if (config.body && typeof config.body !== 'string') {\n                config.body = JSON.stringify(config.body);\n            }\n\n            // check if Content-Type header need to added\n            if (typeof config?.headers?.['Contentt-Type'] === 'undefined') {\n                config.headers = Object.assign({}, config.headers, {\n                    'Content-Type': 'application/json',\n                });\n            }\n        }\n\n        // check if Accept-Language header can be added\n        if (typeof config?.headers?.['Accept-Language'] === 'undefined') {\n            config.headers = Object.assign({}, config.headers, {\n                'Accept-Language': this.lang,\n            });\n        }\n\n        // check if Authorization header can be added\n        if (\n            // has stored token\n            this.AuthStore?.token &&\n            // auth header is not explicitly set\n            (typeof config?.headers?.Authorization === 'undefined')\n        ) {\n            let authType = 'Admin';\n            if (typeof (this.AuthStore.model as any)?.verified !== 'undefined') {\n                authType = 'User'; // admins don't have verified\n            }\n\n            config.headers = Object.assign({}, config.headers, {\n                'Authorization': (authType + ' ' + this.AuthStore.token),\n            });\n        }\n\n        // handle auto cancelation for duplicated pending request\n        if (config?.params?.$autoCancel !== false) {\n            const cancelKey = config?.params?.$cancelKey || ((config.method || 'GET') + path);\n\n            // cancel previous pending requests\n            this.cancelRequest(cancelKey);\n\n            const controller = new AbortController();\n            this.cancelControllers[cancelKey] = controller;\n            config.signal = controller.signal;\n        }\n        // remove the special cancellation params from the other valid query params\n        delete config?.params?.$autoCancel;\n        delete config?.params?.$cancelKey;\n\n        // build full url\n        let url = this.fullUrl(path);\n\n        // serialize the query parameters\n        if (typeof config.params !== 'undefined') {\n            const query = this.serializeQueryParams(config.params)\n            if (query) {\n                url += (url.includes('?') ? '&' : '?') + query;\n            }\n            delete config.params;\n        }\n\n        const finalParams = Object.assign({\n            method: 'GET',\n            mode:   ('cors' as RequestMode),\n        }, config);\n\n        // send the request\n        return fetch(url, finalParams)\n            .then(async (response) => {\n                const data = await response.json();\n\n                if (response.status >= 400) {\n                    throw new ClientResponseError({\n                        url:      response.url,\n                        status:   response.status,\n                        data:     data,\n                    });\n                }\n\n                return data;\n            }).catch((err) => {\n                if (err instanceof ClientResponseError) {\n                    throw err; // rethrow\n                }\n\n                // wrap any other error\n                throw new ClientResponseError(err);\n            });\n    }\n\n    /**\n     * Returns a full client url by safely concatenating the provided path.\n     */\n    fullUrl(path: string): string {\n        let url = this.baseUrl + (this.baseUrl.endsWith('/') ? '' : '/');\n        if (path) {\n            url += (path.startsWith('/') ? path.substring(1) : path);\n        }\n        return url;\n    }\n\n    /**\n     * Serializes the provided query parameters into a query string.\n     */\n    private serializeQueryParams(params: {[key: string]: any}): string {\n        const result: Array<string> = [];\n        for (const key in params) {\n            if (params[key] === null) {\n                // skip null query params\n                continue;\n            }\n\n            const value = params[key];\n            const encodedKey = encodeURIComponent(key);\n\n            if (Array.isArray(value)) {\n                // \"repeat\" array params\n                for (const v of value) {\n                    result.push(encodedKey + \"=\" + encodeURIComponent(v));\n                }\n            } else if (value instanceof Date) {\n                result.push(encodedKey + \"=\" + encodeURIComponent(value.toISOString()));\n            } else if (typeof value !== null && typeof value === 'object') {\n                result.push(encodedKey + \"=\" + encodeURIComponent(JSON.stringify(value)));\n            } else {\n                result.push(encodedKey + \"=\" + encodeURIComponent(value));\n            }\n        }\n\n        return result.join('&');\n    }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","pop","length","push","atobPolyfill","ClientResponseError","_super","errData","_this","url","status","data","isAbort","originalError","Error","DOMException","name","message","_a","atob","a","Buffer","from","toString","JWT","getPayload","token","base64","decodeURIComponent","split","map","c","charCodeAt","slice","join","JSON","parse","isExpired","expirationThreshold","payload","keys","exp","Date","now","BaseModel","load","id","created","updated","defineProperty","get","clone","stringify","export","assign","Record","_i","entries","_b","key","User","email","verified","lastResetSentAt","lastVerificationSentAt","profile","Admin","avatar","LocalAuthStore","storageKey","fallback","_storageGet","model","save","_storageSet","clear","_storageRemove","window","localStorage","rawValue","getItem","normalizedVal","setItem","removeItem","BaseService","client","Settings","getAll","queryParams","send","method","params","responseData","update","bodyParams","ListResult","page","perPage","totalItems","items","BaseCrudService","_getFullList","basePath","batchSize","request","_getList","list","castedList","concat","item","decode","_getOne","encodeURIComponent","_create","_update","_delete","CrudService","getFullList","baseCrudPath","getList","getOne","delete","Admins","authResponse","admin","AuthStore","authViaEmail","password","headers","Authorization","bind","refresh","requestPasswordReset","confirmPasswordReset","passwordResetToken","passwordConfirm","Users","user","listAuthMethods","emailPassword","authProviders","isArray","authViaOAuth2","provider","code","codeVerifier","redirectUrl","requestVerification","confirmVerification","verificationToken","requestEmailChange","newEmail","confirmEmailChange","emailChangeToken","SchemaField","type","system","required","unique","options","Collection","listRule","viewRule","createRule","updateRule","deleteRule","schema","field","Collections","Records","collectionIdOrName","getFileUrl","record","filename","parts","baseUrl","replace","URLSearchParams","includes","SubCrudService","sub","LogRequest","auth","ip","referer","userAgent","meta","Logs","getRequestsList","getRequest","getRequestsStats","Realtime","arguments","clientId","eventSource","subscriptions","subscribe","subscription","callback","removeEventListener","msgEvent","connect","submitSubscriptions","unsubscribe","removeSubscriptionListeners","disconnect","addSubscriptionListeners","addEventListener","connectHandler","lastEventId","EventSource","fullUrl","close","Client","lang","authStore","cancelControllers","cancelRequest","cancelKey","abort","cancelAllRequests","k","path","reqConfig","config","FormData","_c","_d","authType","_e","_f","$autoCancel","_g","$cancelKey","controller","AbortController","signal","_h","_j","query","serializeQueryParams","finalParams","mode","fetch","response","json","catch","err","endsWith","startsWith","substring","encodedKey","value_1","toISOString"],"mappings":"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"}